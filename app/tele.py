import os
import requests
from datetime import datetime
from dotenv import load_dotenv
from pathlib import Path

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
env_path = Path(__file__).resolve().parents[1] / ".env"
load_dotenv(dotenv_path=env_path)

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

def send_violation_alert(location: str, rider_url: str, plate_url: str):
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        print("‚ùå Thi·∫øu TELEGRAM_BOT_TOKEN ho·∫∑c TELEGRAM_CHAT_ID trong file .env")
        return

    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    message = (
        f"üö® <b>Ph√°t hi·ªán vi ph·∫°m</b> t·∫°i <b>{location}</b> l√∫c <b>{now}</b>\n\n"
        f"üîó <b>Li√™n k·∫øt chi ti·∫øt:</b>\n"
        f"H√¨nh ·∫£nh vi ph·∫°m:\n{rider_url}\n"
        f"H√¨nh ·∫£nh bi·ªÉn s·ªë:\n{plate_url if plate_url else 'Kh√¥ng c√≥ ·∫£nh bi·ªÉn s·ªë'}\n"
        f"M·ª©c ƒë·ªô ch√≠nh x√°c: <b>Trung b√¨nh</b>"
    )

    payload = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": message,
        "parse_mode": "HTML",
        "disable_web_page_preview": False  # quan tr·ªçng ƒë·ªÉ b·∫≠t preview
    }

    try:
        r = requests.post(
            f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage",
            json=payload,
            timeout=10
        )
        r.raise_for_status()
        print("‚úÖ G·ª≠i tin nh·∫Øn v·ªõi preview th√†nh c√¥ng")
    except requests.RequestException as e:
        print(f"‚ùå G·ª≠i tin nh·∫Øn th·∫•t b·∫°i: {e}")
